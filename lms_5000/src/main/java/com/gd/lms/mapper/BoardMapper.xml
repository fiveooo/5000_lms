<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.lms.mapper.BoardMapper">

	<!-- 게시판 리스트 생성 쿼리 -->
	<select id="selectBoradList" resultType="com.gd.lms.vo.Board">
		select 
			board_no boardNo
			, board_name boardName
			, board_type boardType
			, create_date createDate
			, lecture_no lectureNo		
		from board b
		where b.lecture_no = #{lectureNo}	
		AND b.board_type = 3
		limit #{beginRow}, #{rowPerPage}
	</select>
		
	<!-- 게시판 생성 쿼리 -->
	<insert id="insertBoard" parameterType="com.gd.lms.vo.Board">
		insert
			into board (
				board_name
				, board_type
				, create_date
				, lecture_no
			) values (
				#{boardName}
				, 3
				, now()
				, #{lectureNo}
			)
	</insert>
	
	
	<!-- 선택한 게시판의 게시글 리스트 생성 쿼리 -->
	<select id="selectBoardPostList" resultType="com.gd.lms.vo.BoardPost">
		select
			board_post_no boardPostNo
			, board_no boardNo
			, board_post_Title boardPostTitle
			, board_post_content boardPostContent
			, board_post_writer boardPostWriter
			, board_post_createdate boardPostCreatedate
			, board_post_updatedate boardPostUpdatedate
			, count count
		from board_post
		where board_No = #{boardNo}
		limit #{beginRow}, #{rowPerPage}
	</select>
	
		<!-- 선택한 게시판의 게시글 리스트 생성 쿼리 --> 
	<select id="selectBoardPostList2" resultType="com.gd.lms.vo.BoardPost">
		select
			bp.board_post_no boardPostNo
			, b.board_no boardNo
			, b.board_name boardName
			, bp.board_post_Title boardPostTitle
			, bp.board_post_content boardPostContent
			, bp.board_post_writer boardPostWriter
			, bp.board_post_createdate boardPostCreatedate
			, bp.board_post_updatedate boardPostUpdatedate
			, bp.count count
		from board_post bp
		INNER JOIN board b
		ON bp.board_no = b.board_no
		WHERE b.board_type = #{board.boardType}
		AND b.lecture_no = #{board.lectureNo}
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	

	
	<!-- 게시글 상세 조회 쿼리 -->
	<select id="selectBoardPostOne" resultType="map">
		select
			p.board_post_no boardPostNo
			, p.board_no boardNo
			, p.board_post_Title boardPostTitle
			, p.board_post_content boardPostContent
			, p.board_post_writer boardPostWriter
			, p.board_post_createdate boardPostCreatedate
			, p.board_post_updatedate boardPostUpdatedate
			, p.count count
			, f.file_originname fileOriginname
			, f.file_name fileName
		from board_post p 
		left outer join board_file f
		on p.board_post_no = f.board_post_no
		where p.board_post_no = #{boardPostNo}
	</select>
	
	
	<!-- 게시글 추가 쿼리 -->
	<insert id="insertBoardPost" parameterType="com.gd.lms.vo.BoardPost" useGeneratedKeys="true" keyProperty="boardPostNo">
		insert
			into board_post(
				board_no
				, board_post_title
				, board_post_content
				, board_post_writer
				, board_post_createdate
				, board_post_updatedate
				, count
			) values (
				#{boardNo}
				, #{boardPostTitle}
				, #{boardPostContent}			
				, #{boardPostWriter}
				, now()
				, now()
				, 0			
			)
	</insert>
	
	
	<!-- 게시글 추가 쿼리 -->
	<insert id="insertBoardFile" parameterType="com.gd.lms.vo.BoardFile">
		insert
			into board_file(
				file_name
				, file_originname
				, file_type
				, create_date
				, board_post_no
			) values (
				#{fileName}
				, #{fileOriginname}			
				, #{fileType}
				, now()
				, #{boardPostNo}
			)
	</insert>
	
	<!-- 댓글 추가 쿼리 -->
	<insert id="insertComment" parameterType="com.gd.lms.vo.Comment">
		insert
			into comment(
				comment_writer
				, comment_content
				, comment_createdate
				, comment_updatedate
				, board_post_no
			) values (
				#{commentWriter}
				, #{commentContent}
				, now()
				, now()
				, #{boardPostNo}
			)
	
	</insert>
	
	<!-- 댓글 조회 쿼리 -->
	<select id="selectComment" resultType="com.gd.lms.vo.Comment" >
		select
			comment_no commentNo
			, comment_writer commentWriter
			, comment_content commentContent
			, comment_createdate commentCreatedate
			, comment_updatedate commentUpdatedate
			, board_post_no boardPostNo
		from comment
		where board_post_no = #{boardPostNo}
				
	</select>
	
	<!-- 댓글 삭제 쿼리 -->
	<delete id="deleteComment" parameterType="int">
		delete
		from comment
		where comment_no = #{commentNo}
	</delete>
	
	<!-- 게시글 삭제 쿼리 -->
	<delete id="deleteBoardPost" parameterType="int">
		delete
		from board_post
		where board_post_no = #{boardPostNo}
	</delete>

	<!-- 게시글 수정 쿼리 -->
	<update id="updateBoardPost" parameterType="com.gd.lms.vo.BoardPost">
		UPDATE board_post
		SET 
			board_post_title = #{boardPostTitle}
			, board_post_content = #{boardPostContent}
			, board_post_updatedate = now()
		WHERE board_post_no = #{boardPostNo}
	</update>

	<!-- 게시판 삭제 쿼리 -->
	<delete id="deleteBaord" parameterType="int">
		delete
		from board
		where board_no = #{boardNo}
	</delete>
	
	<!-- 댓글 수정 쿼리 -->
	<update id="updateComment" parameterType="com.gd.lms.vo.Comment">
		update comment
		set 
			comment_content = #{commentContent}
			, comment_updatedate = now()
		where comment_no = #{commentNo}
	</update>
	
	<!-- 강좌번호로 과목 이름 불러오는 쿼리 -->
	<select id="selectLectureName" resultType="String">
		select s.subject_name
		from lecture l
		inner join subject s
		on l.subject_no = s.subject_no
		where l.lecture_no = #{lectureNo}
	</select>
	
	<!-- 게시판 페이징을 위한 마지막 페이지 찾아내기  -->
	<select id="selectRealEndPageForBoard" resultType="int">
		SELECT COUNT(board_no) cnt
		FROM board
		WHERE lecture_no = #{lectureNo}
		AND board_type = 3
	</select>
	
	<!-- 게시판 글 페이징을 위한 마지막 페이지 찾아내기  -->
	<select id="selectRealEndPageForBoardPost" resultType="int">
		SELECT COUNT(board_post_no) cnt
		FROM board_post bp
		INNER JOIN board b
		ON b.board_no = bp.board_no
		WHERE lecture_no = #{lectureNo}
		AND b.board_no = #{boardNo}
	</select>	

	<!-- 게시판 글 페이징을 위한 마지막 페이지 찾아내기  -->
	<select id="selectRealEndPageForBoardPost2" resultType="int">
		SELECT COUNT(board_post_no) cnt
		FROM board_post bp
		INNER JOIN board b
		ON b.board_no = bp.board_no
		WHERE lecture_no = #{lectureNo}
		AND b.board_type = #{boardType}
	</select>

</mapper>