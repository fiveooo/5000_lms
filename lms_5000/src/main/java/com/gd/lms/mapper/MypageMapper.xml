<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.lms.mapper.MypageMapper">

	<!-- 마이페이지 나의 정보 조회하기 -->
	<select id="selectUserInfo" parameterType="String" resultType="com.gd.lms.vo.User">
		SELECT
			user_id userId,
			user_pw userPw,
			user_level userLevel,
			user_name userName,
			user_email userEmail,
			user_tel userTel,
			user_gender userGender,
			create_date createDate,
			update_date updateDate,
			lastlogin_date lastloginDate
		FROM user
		WHERE user_id = #{userId}
	</select>
	
	<!-- 유저 이메일 변경 -->
	<update id="modifyUserEmail">
		Update user
		Set user_email = #{userEmail}
		Where user_id = #{userId}
	</update>
	
	<!-- 운영자 이메일 변경 -->
	<update id="modifyAdminEmail">
		Update admin
		Set admin_email = #{userEmail}
		Where user_id = #{userId}
	</update>
	
	<!-- 학생 이메일 변경 -->
	<update id="modifyStudentEmail">
		Update student
		Set st_email = #{userEmail}
		Where user_id = #{userId}
	</update>
	
	<!-- 교수 이메일 변경 -->
	<update id="modifyProEmail">
		Update professor
		Set pro_email = #{userEmail}
		Where user_id = #{userId}
	</update>
		
	<!-- 유저 번호 변경 -->
	<update id="modifyUserTel">
		Update user
		Set user_tel = #{userTel}
		Where user_id = #{userId}
	</update>
	<!-- 운영자 번호 변경 -->
	<update id="modifyAdminTel">
		Update admin
		Set admin_tel = #{userTel}
		Where user_id = #{userId}
	</update>
	<!-- 학생 번호 변경 -->
	<update id="modifyStudentTel">
		Update student
		Set st_tel = #{userTel}
		Where user_id = #{userId}
	</update>
	<!-- 교수 번호 변경 -->
	<update id="modifyProTel">
		Update professor
		Set pro_tel = #{userTel}
		Where user_id = #{userId}
	</update>
	
	<!-- 비밀번호 변경시 기존 비밀번호 입력한게 db와 일치하는지 확인 -->
	<select id="selectPwCheck" parameterType="com.gd.lms.vo.User" resultType="com.gd.lms.vo.User">
		Select
			user_id userId
		From user
		Where user_id = #{userId} AND user_pw = password( #{userPw} )
	</select>
	
	<!-- 유저 비밀번호 변경 -->
	<update id="modifyUserPw" parameterType="com.gd.lms.vo.User">
		Update user
		Set user_pw =  password(#{userPw}), update_date = Now()
		Where user_id = #{userId}
	</update>
	
	<!-- 유저 아이디로 게시글 리스트 받아오기 -->
	<select id="selectboardWriteList" parameterType="string" resultType="map">
		SELECT
			distinct
			m.major_name majorName,
			s.subject_name subjectName,
 			b.board_name boardName,
 			bp.board_post_title boardPostName,
 			bp.board_post_no boardPostNo,
 			b.board_no boardNo,
 			bp.board_post_createdate boardPostCreatedate,
 			bp.count count
		from
			professor p INNER JOIN lecture l
			ON p.user_id = l.user_id
				INNER JOIN subject s
				ON l.subject_no = s.subject_no
					INNER JOIN major m
					ON s.major_no = m.major_no
						INNER JOIN board b
						ON l.lecture_no = b.lecture_no
							INNER JOIN board_post bp
							ON b.board_no = bp.board_no
		WHERE bp.board_post_writer = #{userId}
	</select>
	
	<!-- 유저 아이디로 작성한 댓글 리스트 -->
	<select id="selectCommentWriteList" parameterType="string" resultType="map">
		SELECT distinct 
			m.major_name majorName,
			s.subject_name subjectName,
 			b.board_name boardName,
 			bp.board_post_title boardPostTitle,
 			bp.board_post_no boardPostNo,
 			b.board_no boardNo,
 			co.comment_content commentContent,
 			co.comment_createdate commentCreateDate,
 			co.comment_updatedate commentUpdateDate
		from professor p INNER JOIN lecture l
			ON p.user_id = l.user_id
				INNER JOIN subject s
				ON l.subject_no = s.subject_no
					INNER JOIN major m
					ON s.major_no = m.major_no
					INNER JOIN board b
					ON l.lecture_no = b.lecture_no
						INNER JOIN board_post bp
						ON b.board_no = bp.board_no
							INNER JOIN comment co
							ON bp.board_post_no = co.board_post_no
		WHERE co.comment_writer = #{userId}
	</select>
	
</mapper>