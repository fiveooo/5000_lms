<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.lms.mapper.TotalGradeMapper">

	<!-- 학생 리스트 추출 쿼리 -->
	<select id="selectTotalgradePro" resultType="map">
		SELECT 
			t.sign_no signNo
			, t.total_grade totalGrade
			, t.grade_total gradeTotal
			, t.grade_rank gradeRank
			, t.grade_test gradeTest
			, t.grade_att gradeAtt
			, t.grade_paper gradePaper
			, s.user_id userId
			, st.st_name stName
		FROM totalgrade t
		INNER JOIN sign s
		ON t.sign_no = s.sign_no
		INNER JOIN student st
		ON s.user_id = st.user_id
		WHERE s.lecture_no = #{lectureNo}
	</select>
	
	<!-- 학생 수강정보 출력 -->
	<select id="selectSignNo" resultType="Integer">
		SELECT sign_no
		FROM sign
		WHERE lecture_no = #{lectureNo}
		and sign_state = "1"
	</select>
	
	<!-- 특정 강좌의 총 문제수 출력 쿼리 -->
	<select id="selectQuestionCnt" resultType="Integer">
		SELECT 
			COUNT(q.question_no) questionCnt
		FROM question q
		INNER JOIN test t
		ON q.test_no = t.test_no
		INNER JOIN lecture l
		ON t.lecture_no = l.lecture_no
		WHERE t.lecture_no = #{lectureNo}
	</select>
	
	<!-- 특정 학생의 시험점수 확인 쿼리 -->
	<select id="selectTestGrade" resultType="Integer">
		SELECT 
			ifnull(SUM(a.answer_score)/#{questionCnt}*100,0) score
			, COUNT(q.question_no) questionCnt
			, COUNT(a.answer_score) scoreCnt
		FROM answer a
		INNER JOIN question q
		ON a.question_no = q.question_no
		INNER JOIN test t
		ON q.test_no = t.test_no
		INNER JOIN sign s
		ON s.sign_no = a.sign_no
		WHERE t.lecture_no = #{lectureNo}
		AND s.sign_no = #{signNo}
	</select>
	
	<!-- 특정 학생의 출석 점수 확인 쿼리 -->
	<select id="selectAttGrade" resultType="int">
		SELECT ifNull(sum(attend_state)/(16*3) * 100,0) score
		from attendance
		WHERE sign_no = #{signNo};
	</select>
	
	<!-- 학생 기본 점수 업데이트 쿼리 -->
	<update id="updateGrade" parameterType="com.gd.lms.vo.Totalgrade">
		UPDATE totalgrade t
		SET 
			t.grade_test = #{gradeTest}
			, t.grade_att = #{gradeAtt}
			, t.grade_paper = #{gradePaper}
			, t.grade_total = #{gradeTotal}
		WHERE t.sign_no = #{signNo}
	</update>
	
	<!-- 가상테이블에 랭크 및 학점 출력 -->
	<select id="selectRank" parameterType="com.gd.lms.vo.Totalgrade" resultType="map">
 SELECT 
	         t.sign_no
	         , s.lecture_no
	         , t.grade_total
	         , ( SELECT COUNT(*) + 1 FROM totalgrade WHERE <![CDATA[grade_total > t.grade_total]]>
	         )  AS RANK
	         
	         , ( SELECT COUNT(*) + 1 FROM totalgrade WHERE  <![CDATA[grade_total > t.grade_total]]> 
	         ) / (SELECT COUNT(sign_no) FROM sign WHERE lecture_no = 48) * 100 AS persent
	         , (SELECT
	            case
	               when <![CDATA[persent <= 10]]> then 4.5
	               when <![CDATA[persent <= 25]]> then 4.0
	               when <![CDATA[persent <= 45]]> then 3.5
	               when <![CDATA[persent <= 85]]> then 3.0
	               when <![CDATA[persent <= 95]]> then 2.5
	               when <![CDATA[persent <= 100]]> then 2.0
	            END
	         ) AS POINT
	      FROM totalgrade t
	      INNER JOIN sign s
	      ON s.sign_no = t.sign_no
	      ,(SELECT @RANK := 1) xx
	      WHERE s.lecture_no = 48
	      ORDER BY grade_total DESC
	</select>
	
	
	<!-- 랭크 및 학점 업데이트 -->
	<update id="updateRank" parameterType="com.gd.lms.vo.Totalgrade">
		UPDATE totalgrade SET
		grade_rank = #{gradeRank}
		,total_grade = #{totalGrade}
		WHERE sign_no = #{signNo}
	</update>
	
	
	<!-- 특정 학생의 성적 출력 쿼리 -->
	<select id="selectTotalgradeForStu" resultType="map">
		SELECT 
			sb.subject_name
			, u.user_name 
			, t.sign_no signNo
			, t.total_grade totalGrade
			, t.grade_total gradeTotal
			, t.grade_rank gradeRank
			, t.grade_test gradeTest
			, t.grade_att gradeAtt
			, t.grade_paper gradePaper
		FROM totalgrade t
		INNER JOIN sign s
		on t.sign_no = s.sign_no
		INNER JOIN user u
		ON u.user_id = s.user_id
		INNER JOIN lecture l
		ON s.lecture_no = l.lecture_no
		INNER JOIN subject sb
		ON l.subject_no = sb.subject_no
		WHERE s.user_id = #{userId}
		AND s.lecture_no = #{lectureNo}

	</select>
	
	<!-- 학생 성적 테이블 최초 입력 -->
	<insert id="insertTotalgrade">
	INSERT INTO totalgrade(
		sign_no
		, total_grade
		, grade_total
		, grade_rank
		, grade_test
		, grade_att
		, grade_paper
		) value (
		#{signNo}
		, 0
		, 0
		, 0
		, 0
		, 0
		, 0
		)
	</insert>
</mapper>
